name: Build and Release

on:
  push:
    tags:
      - 'v1.0.0'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Build project with Maven
        run: mvn -B clean package

      - name: Generate runtime and package with jpackage (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install imagemagick
          chmod +x generate-icons.sh
          ./generate-icons.sh
          jlink \
            --module-path $JAVA_HOME/jmods:$(find ~/.m2/repository/org/openjfx -name '*mac-aarch64.jar' -exec dirname {} \; | head -1) \
            --add-modules java.base,javafx.controls,javafx.fxml \
            --output runtime-TodoList \
            --strip-debug --compress=2 --no-header-files --no-man-pages

          jpackage \
            --type app-image \
            --name TodoList \
            --input target \
            --main-jar todolist-1.0-SNAPSHOT-jar-with-dependencies.jar \
            --main-class com.todo.javiergrande.Main \
            --runtime-image runtime-TodoList \
            --icon src/main/resources/icons/icon.icns \
            --dest dist/mac

      - name: Package with jpackage (Windows)
        if: runner.os == 'Windows'
        run: |
          jpackage ^
            --type exe ^
            --name TodoList ^
            --input target ^
            --main-jar todolist-1.0-SNAPSHOT-jar-with-dependencies.jar ^
            --main-class com.todo.javiergrande.Main ^
            --icon src/main/resources/icons/icon.ico ^
            --dest dist/windows

      - name: Package with jpackage (Linux)
        if: runner.os == 'Linux'
        run: |
          jpackage \
            --type app-image \
            --name TodoList \
            --input target \
            --main-jar todolist-1.0-SNAPSHOT-jar-with-dependencies.jar \
            --main-class com.todo.javiergrande.Main \
            --icon src/main/resources/icons/icon.png \
            --dest dist/linux

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: TodoList-${{ runner.os }}
          path: dist/**/*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: release-builds

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: TodoList ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            release-builds/**/*

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
